"use strict";(self.webpackChunkdigital_enabler_documentation=self.webpackChunkdigital_enabler_documentation||[]).push([[656],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,g=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={slug:"data-integration",title:"Data Integration",sidebar_label:"Data Integration"},i=void 0,l={unversionedId:"data-integration/data-integration",id:"data-integration/data-integration",title:"Data Integration",description:"Data Integration",source:"@site/docs/data-integration/data-integration.md",sourceDirName:"data-integration",slug:"/data-integration/data-integration",permalink:"/data-integration/data-integration",draft:!1,tags:[],version:"current",frontMatter:{slug:"data-integration",title:"Data Integration",sidebar_label:"Data Integration"}},s={},c=[{value:"Data Integration",id:"data-integration",level:2},{value:"Data Mashup",id:"data-mashup",level:3},{value:"Workflows",id:"workflows",level:3},{value:"Rules and events processing",id:"rules-and-events-processing",level:3},{value:"Serverless functions",id:"serverless-functions",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"data-integration"},"Data Integration"),(0,a.kt)("h3",{id:"data-mashup"},"Data Mashup"),(0,a.kt)("p",null,"A tool for harmonizing the information from various data sources.\nIt contains a rich choice of operators who can be used for extracting data.\nIt can be connected to devices to receive data and can also push data to context broker."),(0,a.kt)("h3",{id:"workflows"},"Workflows"),(0,a.kt)("p",null,"Tool Airflow uses directed acyclic graphs (DAGs) to manage workflow orchestration. Tasks and dependencies are defined in Python and then Airflow manages the scheduling and execution. DAGs can be run either on a defined schedule (e.g. hourly or daily) or based on external event triggers."),(0,a.kt)("h3",{id:"rules-and-events-processing"},"Rules and events processing"),(0,a.kt)("h3",{id:"serverless-functions"},"Serverless functions"),(0,a.kt)("p",null,"A tool for publishing function for various programming languages to Openshift and make that function publicly available."))}p.isMDXComponent=!0}}]);