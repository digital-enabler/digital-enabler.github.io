(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{137:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dema_edge_new_device1-c6ee2ec1471b9175a05cac1e6062ffd7.png"},138:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dema_edge_new_device2-7b21a0df02ee495a3ef43f27ea480231.png"},139:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dema_edge_new_device3-2685f5525846da7b1a4971e2d31f731d.png"},140:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dema_edge_new_device4-d228a185c3af4165ba1e7214cce08355.png"},64:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var r=a(2),n=a(6),o=(a(0),a(95)),i=["components"],c={slug:"iot-edge-gateway",title:"IoT Edge gateway",sidebar_label:"IoT Edge gateway"},l={unversionedId:"iot-edge-gateway",id:"iot-edge-gateway",isDocsHomePage:!1,title:"IoT Edge gateway",description:"Introduction",source:"@site/docs/iot-edge-gateway.md",slug:"/iot-edge-gateway",permalink:"/iot-edge-gateway",version:"current",sidebar_label:"IoT Edge gateway",sidebar:"someSidebar",previous:{title:"Device simulation",permalink:"/device-simulation"},next:{title:"Data Workspace",permalink:"/data-workspace"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Digital Enabler edge architecture",id:"digital-enabler-edge-architecture",children:[]},{value:"How it works",id:"how-it-works",children:[]}],d={rightToc:s};function b(e){var t=e.components,c=Object(n.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},d,c,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"Edge Computing is a distributed and decentralized architectural model that allows data processing to be brought closer to the source, unlike classic Cloud Computing in which all the data is processed in the cloud."),Object(o.b)("p",null,"An Edge Gateway is any piece of hardware or software deployed outside the cloud network and close to the data source, that offers the possibility to register the sensors, collect, elaborate data, supporting different communication protocols."),Object(o.b)("p",null,"The advantages of an edge architecture are the possibility of pre-processing data, reducing traffic to the cloud, decreasing the latency of critical operations and standardizing communication to the cloud."),Object(o.b)("h3",{id:"digital-enabler-edge-architecture"},"Digital Enabler edge architecture"),Object(o.b)("p",null,"The Digital Enabler edge architecture is based on two open source framework developed by the Eclipse IoT Working Group, fully integrated in the Digital Enabler ecosystem: Eclipse Kura on the edge, Eclipse Kapua on the cloud side."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",{parentName:"p",href:"https://www.eclipse.org/kura/"},"Eclipse Kura")," is an extensible IoT Edge Framework based on Java. It offers access to hardware interfaces as serial port, GPS, GPIOs, etc.. It also supports field protocols as Modbus, OPC-UA, S7 and many others.\nIts extensibility gives also a high level of customization to the data flow on the edge. Kura is connected to the Cloud using the MQTT protocol. It acts as a gateway on which many IoT devices can be registered.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",{parentName:"p",href:"https://www.eclipse.org/kapua/"},"Eclipse Kapua")," is a modular IoT Cloud Platform. It is used as the cloud backend of the edge gateways. It permits to manage all connected Kura gateways: register sensors on Kura, configure the gateway and the connected IoT devices, send data to the devices, etc.."))),Object(o.b)("h3",{id:"how-it-works"},"How it works"),Object(o.b)("p",null,"Three prerequisites must be met before creating a device connected to an edge gateway on the ",Object(o.b)("strong",{parentName:"p"},"Device Manager"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"At least an instance of Eclipse Kapua must be deployed on the cloud"),Object(o.b)("li",{parentName:"ul"},"At least an instance of Eclipse Kura must be deployed on the edge"),Object(o.b)("li",{parentName:"ul"},"Kura must be connected to the deployed Kapua")),Object(o.b)("h4",{id:"create-new-device"},"Create new device"),Object(o.b)("p",null,"The flow to create a new device is the same as shown on the previous chapters, with some specific parameters."),Object(o.b)("p",null,Object(o.b)("img",{src:a(137).default}),"  "),Object(o.b)("p",null,"In the ",Object(o.b)("em",{parentName:"p"},"Hub")," section a ",Object(o.b)("em",{parentName:"p"},"Kapua")," instance should be selected, then the ",Object(o.b)("em",{parentName:"p"},"Gateway")," list will be filled with the available Kura gateways."),Object(o.b)("p",null,Object(o.b)("img",{src:a(138).default})," "),Object(o.b)("p",null,"When adding a device, connected with a ",Object(o.b)("em",{parentName:"p"},"Kura")," gateway, protocol and data format sections are already selected and cannot be changed. As specified before, ",Object(o.b)("em",{parentName:"p"},"Kura")," uses MQTT and JSON to communicate with the backend."),Object(o.b)("p",null,Object(o.b)("img",{src:a(139).default})),Object(o.b)("p",null,"Then a connected sensor must be selected from a list of available sensors. Each sensor has its own configuration and based on the datasheet of the device.\nThis configuration will be provided to the edge gateway that will be able to start collecting data."),Object(o.b)("p",null,Object(o.b)("img",{src:a(140).default})),Object(o.b)("p",null,"After selecting sensor, the list of associated attributes will be shown.\nThe selected sensor is a MODBus device, so the ",Object(o.b)("em",{parentName:"p"},"Modbus Address")," must be set."),Object(o.b)("p",null,"So far the supported devices are:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},"DEVICE MODEL"),Object(o.b)("th",{parentName:"tr",align:"right"},"ATTRIBUTES"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://www.setecna.it/wp-content/uploads/2021/06/MB-TH-Sxx_datasheet.pdf"},"SETECNA_MB-TH-S14")),Object(o.b)("td",{parentName:"tr",align:"right"},"Temperature, Humidity")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://www.epluse.com/fileadmin/data/product/ee800/BA_EE800_e.pdf"},"EE800")),Object(o.b)("td",{parentName:"tr",align:"right"},"Co2")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://advdownload.advantech.com/productfile/PIS/ADAM-4118/file/ADAM-4118_4150_4168_DS(081321)20210817101347.pdf"},"ADAM_4118")),Object(o.b)("td",{parentName:"tr",align:"right"},"V0, V1, V2, V3, V4, V5, V6, V7")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"SONDA_SETECNA_T"),Object(o.b)("td",{parentName:"tr",align:"right"},"Temperature")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"SONDA_SETECNA_UR"),Object(o.b)("td",{parentName:"tr",align:"right"},"Humidity")))),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"SONDA_SETECNA_T and SONDA_SETECNA_UR are different configurations for the same SETECNA_MB-TH-S14 device, one to retrieve only temperature the other for relative humidity")," "),Object(o.b)("h4",{id:"delete-a-device"},"Delete a device"),Object(o.b)("p",null,"When an edge device is deleted from the ",Object(o.b)("strong",{parentName:"p"},"DeviceManager")," the configuration on the edge gateway is disabled, but not actually removed, due to Kura APIs structure. At the state of the art the actual remove has to take place on Kura side."))}b.isMDXComponent=!0},95:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return g}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),d=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},b=function(e){var t=d(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},p=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=d(a),p=r,g=b["".concat(i,".").concat(p)]||b[p]||u[p]||o;return a?n.a.createElement(g,c(c({ref:t},s),{},{components:a})):n.a.createElement(g,c({ref:t},s))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=a[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);